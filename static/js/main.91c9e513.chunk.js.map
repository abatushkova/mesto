{"version":3,"sources":["components/Header.js","utils/api.js","components/Card.js","components/Main.js","components/Footer.js","components/ButtonClose.js","components/PopupWithForm.js","components/ButtonSubmit.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js","images/header/__logo/logo.svg"],"names":["Header","className","src","logo","alt","React","Component","api","options","this","_baseUrl","baseUrl","_headers","headers","url","params","fetch","body","JSON","stringify","then","response","ok","json","Promise","reject","status","_fetch","method","authorization","Card","props","handleClick","bind","onCardClick","card","buttonDelete","owner","_id","userId","type","title","onClick","onDeleteBtnClick","link","name","likes","length","Main","state","userName","userDescription","userAvatar","cards","all","getInitialUserInfo","getInitialCards","user","setState","about","avatar","catch","err","console","error","onEditAvatar","onEditProfile","onAddCard","map","key","Footer","ButtonClose","closeHandler","PopupWithForm","isOpen","noValidate","children","onClose","ButtonSubmit","ImagePopup","App","handleEditAvatarClick","handleEditProfileClick","handleAddCardClick","handleCardClick","handleDeleteBtnClick","closeAllPopups","isEditAvatarPopupOpen","isEditProfilePopupOpen","isAddCardPopupOpen","isConfirmPopupOpen","selectedCard","htmlFor","id","placeholder","required","minLength","maxLength","pattern","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.91c9e513.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/header/__logo/logo.svg';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"header page__section\">\n        <img src={logo}\n          alt=\"Логотип сайта Место\"\n          className=\"header__logo\"\n        />\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","class Api  {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n  }\n\n  _fetch(url, params) {\n    return fetch(this._baseUrl + url, {\n      ...params,\n      headers: this._headers,\n      body: JSON.stringify(params.body)\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject(`Ошибка: ${response.status}`);\n    })\n  }\n\n  getInitialUserInfo() {\n    return this._fetch('/users/me', {\n      method: 'GET'\n    });\n  }\n\n  getInitialCards() {\n    return this._fetch('/cards', {\n      method: 'GET'\n    });\n  }\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-12',\n  headers: {\n    authorization: 'bd0f2499-7585-4f83-9366-da3fa3857f94',\n    'Content-Type': 'application/json'\n  }\n});\n","import React from 'react';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onCardClick(this.props.card);\n  }\n\n  render() {\n    let buttonDelete = (this.props.card.owner._id === this.props.userId)\n      && <button type=\"button\" \n        className=\"elements__delete-btn\" title=\"Удалить\" \n        onClick={this.props.onDeleteBtnClick}></button>;\n\n    return (\n      <div className=\"elements__item\">\n        {buttonDelete}\n        <img src={this.props.card.link}\n          className=\"elements__img\"\n          alt={this.props.card.name}\n          onClick={this.handleClick}\n        />\n        <div className=\"elements__info\">\n          <h2 className=\"elements__title\">{this.props.card.name}</h2>\n          <div className=\"elements__like\">\n            <button type=\"button\"\n              className=\"elements__like-btn\"\n              title=\"Мне нравится\">\n            </button>\n            <span className=\"elements__like-counter\">\n              {this.props.card.likes.length}\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport { api } from '../utils/api';\nimport Card from './Card';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      userDescription: '',\n      userAvatar: '',\n      userId: '',\n      cards: []\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([api.getInitialUserInfo(), api.getInitialCards()])\n    .then(([user, cards]) => {\n      this.setState({\n        userName: user.name,\n        userDescription: user.about,\n        userAvatar: user.avatar,\n        userId: user._id,\n        cards: cards\n      });\n    })\n    .catch(err => console.error(err));\n  }\n\n  render() {\n    return (\n      <main className=\"container page__section\">\n      <section className=\"profile container__profile\">\n        <div className=\"profile__avatar\">\n          <img src={this.state.userAvatar}\n            className=\"profile__img\"\n            alt={this.state.userName}\n          />\n          <button type=\"button\"\n            className=\"profile__update-av-btn\"\n            title=\"Сменить аватар\"\n            onClick={this.props.onEditAvatar}>\n          </button>\n        </div>\n        <div className=\"profile__details\">\n          <h1 className=\"profile__name\">{this.state.userName}</h1>\n          <button type=\"button\"\n            className=\"profile__edit-btn\"\n            title=\"Редактировать профиль\"\n            onClick={this.props.onEditProfile}>\n          </button>\n          <p className=\"profile__info\">{this.state.userDescription}</p>\n        </div>\n        <button type=\"button\"\n          className=\"profile__add-btn\"\n          title=\"Добавить фотографию\"\n          onClick={this.props.onAddCard}>\n        </button>\n      </section>\n      <section className=\"elements\">\n        {this.state.cards.map(card => {\n          return <Card\n            card={card}\n            key={card._id}\n            userId={this.state.userId}\n            onCardClick={this.props.onCardClick}\n            onDeleteBtnClick={this.props.onDeleteBtnClick}\n          />\n        })}\n      </section>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer className=\"footer page__section\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from 'react';\n\nclass ButtonClose extends React.Component {\n  render() {\n    return (\n      <button type=\"button\"\n        className=\"popup__close-btn\"\n        title=\"Закрыть\"\n        onClick={this.props.closeHandler}>\n      </button>\n    );\n  }\n}\n\nexport default ButtonClose;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\n\nclass PopupWithForm extends React.Component {\n  render() {\n    return (\n      <div className={\n        `popup popup_type_${this.props.name} ${this.props.isOpen}`\n      }>\n        <div className=\"popup__container\">\n          <h2 className=\"popup__title\">{this.props.title}</h2>\n          <form className=\"popup__form\" name={this.props.name} noValidate>\n            {this.props.children}\n          </form>\n          <ButtonClose closeHandler={this.props.onClose} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nclass ButtonSubmit extends React.Component {\n  render() {\n    return (\n      <button type=\"submit\" className=\"popup__submit-btn\">\n        {this.props.children}\n      </button>\n    );\n  }\n}\n\nexport default ButtonSubmit;\n","import React from 'react';\nimport ButtonClose from './ButtonClose';\n\nclass ImagePopup extends React.Component {\n  render() {\n    return (\n      <div className={`popup popup_type_img ${this.props.isOpen}`}>\n        <div className=\"popup__img-wrapper\">\n          <img src={this.props.card.link}\n            className=\"popup__img\"\n            alt={this.props.card.name}\n          />\n          <p className=\"popup__img-title\">{this.props.card.name}</p>\n          <ButtonClose closeHandler={this.props.onClose} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ImagePopup;\n","import React from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\nimport ImagePopup from './ImagePopup';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditAvatarClick = this.handleEditAvatarClick.bind(this);\n    this.handleEditProfileClick = this.handleEditProfileClick.bind(this);\n    this.handleAddCardClick = this.handleAddCardClick.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n    this.handleDeleteBtnClick = this.handleDeleteBtnClick.bind(this);\n    this.closeAllPopups = this.closeAllPopups.bind(this);\n\n    this.state = {\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddCardPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: false\n    }\n  }\n\n  handleEditAvatarClick() {\n    this.setState({\n      isEditAvatarPopupOpen: !this.state.isEditAvatarPopupOpen\n    });\n  }\n  handleEditProfileClick() {\n    this.setState({\n      isEditProfilePopupOpen: !this.state.isEditProfilePopupOpen\n    });\n  }\n  handleAddCardClick() {\n    this.setState({\n      isAddCardPopupOpen: !this.state.isAddCardPopupOpen\n    });\n  }\n  handleCardClick(card) {\n    this.setState({\n      selectedCard: card\n    })\n  }\n  handleDeleteBtnClick() {\n    this.setState({\n      isConfirmPopupOpen: !this.state.isConfirmPopupOpen\n    })\n  }\n  closeAllPopups() {\n    this.setState({\n      isEditAvatarPopupOpen: false,\n      isEditProfilePopupOpen: false,\n      isAddCardPopupOpen: false,\n      isConfirmPopupOpen: false,\n      selectedCard: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"page__content\">\n        <Header />\n        <Main\n          onEditAvatar={this.handleEditAvatarClick}\n          onEditProfile={this.handleEditProfileClick}\n          onAddCard={this.handleAddCardClick}\n          onCardClick={this.handleCardClick}\n          onDeleteBtnClick={this.handleDeleteBtnClick}\n        />\n        <Footer />\n\n        <PopupWithForm\n          name=\"avatar\"\n          title=\"Обновить аватар\"\n          isOpen={(this.state.isEditAvatarPopupOpen)\n            ? \"popup_opened\"\n            : \"\"}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"av-input\">\n            <input type=\"url\" name=\"avatar\" id=\"av-input\"\n              className=\"popup__input\"\n              placeholder=\"Ссылка\" required />\n            <span className=\"popup__error\" id=\"av-input-error\"></span>\n          </label>\n          <ButtonSubmit>Сохранить</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"profile\"\n          title=\"Редактировать профиль\"\n          isOpen={(this.state.isEditProfilePopupOpen)\n            ? \"popup_opened\"\n            : \"\"}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"name-input\">\n            <input type=\"text\" name=\"name\" id=\"name-input\"\n              className=\"popup__input\"\n              placeholder=\"Имя\" required\n              minLength=\"2\" maxLength=\"40\"\n              pattern=\"[a-zA-Zа-яА-ЯёЁ\\s\\-]+\"\n            />\n            <span className=\"popup__error\" id=\"name-input-error\"></span>\n          </label>\n          <label className=\"popup__label\" htmlFor=\"info-input\">\n            <input type=\"text\" name=\"about\" id=\"info-input\"\n              className=\"popup__input\"\n              placeholder=\"О себе\" required\n              minLength=\"2\" maxLength=\"200\"\n            />\n            <span className=\"popup__error\" id=\"info-input-error\"></span>\n          </label>\n          <ButtonSubmit>Сохранить</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"card\"\n          title=\"Новое место\"\n          isOpen={(this.state.isAddCardPopupOpen)\n            ? \"popup_opened\"\n            : \"\"}\n          onClose={this.closeAllPopups}\n        >\n          <label className=\"popup__label\" htmlFor=\"title-input\">\n            <input type=\"text\" name=\"title\" id=\"title-input\"\n              className=\"popup__input\"\n              placeholder=\"Название\" required minLength=\"1\"\n              maxLength=\"30\"\n            />\n            <span className=\"popup__error\" id=\"title-input-error\"></span>\n          </label>\n          <label className=\"popup__label\" htmlFor=\"src-input\">\n            <input type=\"url\" name=\"src\" id=\"src-input\"\n              className=\"popup__input\"\n              placeholder=\"Ссылка\" required\n            />\n            <span className=\"popup__error\" id=\"src-input-error\"></span>\n          </label>\n          <ButtonSubmit>Создать</ButtonSubmit>\n        </PopupWithForm>\n\n        <PopupWithForm\n          name=\"confirm\"\n          title=\"Вы уверены?\"\n          isOpen={(this.state.isConfirmPopupOpen)\n            ? \"popup_opened\"\n            : \"\"}\n          onClose={this.closeAllPopups}\n        >\n          <ButtonSubmit>Да</ButtonSubmit>\n        </PopupWithForm>\n\n        <ImagePopup\n          card={this.state.selectedCard}\n          isOpen={(this.state.selectedCard)\n            ? \"popup_opened\"\n            : \"\"}\n          onClose={this.closeAllPopups}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5746c0f0.svg\";"],"sourceRoot":""}